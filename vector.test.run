
--------------------------
=  test file vector.test.cpp
=== run should_initialize_empty_vector
===== at l.8 test vec.size() == 0 : [1m[32mOK[0m
===== at l.9 test vec.capacity() == 10 : [1m[32mOK[0m
===== at l.10 test vec.begin() == vec.end() : [1m[32mOK[0m

--------------------------
=  test file vector.test.cpp
=== run should_pushback_2_items
===== at l.18 test vec.size() == 2 : [1m[32mOK[0m
===== at l.19 test vec.capacity() == 10 : [1m[32mOK[0m
===== at l.20 test vec.begin() + 2 == vec.end() : [1m[32mOK[0m

--------------------------
=  test file vector.test.cpp
=== run should_reserve_1000_items
===== at l.26 test vec.size() == 0 : [1m[32mOK[0m
===== at l.27 test vec.capacity() == 1000 : [1m[32mOK[0m
===== at l.28 test vec.begin() == vec.end() : [1m[32mOK[0m

--------------------------
=  test file vector.test.cpp
=== run should_copy_vector
===== at l.37 test vec.size() == 2 : [1m[32mOK[0m
===== at l.38 test vec.capacity() == 10 : [1m[32mOK[0m
===== at l.39 test vec.begin() + 2 == vec.end() : [1m[32mOK[0m
===== at l.40 test vec2.size() == 2 : [1m[32mOK[0m
===== at l.41 test vec2.capacity() == 10 : [1m[32mOK[0m
===== at l.42 test vec2.begin() + 2 == vec2.end() : [1m[32mOK[0m
===== at l.43 test vec[0] == vec2[0] : [1m[32mOK[0m
===== at l.44 test vec[1] == vec2[1] : [1m[32mOK[0m

--------------------------
=  test file vector.test.cpp
=== run should_move_vector
===== at l.54 test vec.size() == 0 : [1m[32mOK[0m
===== at l.55 test vec.capacity() == 0 : [1m[32mOK[0m
===== at l.56 test vec.begin() == vec.end() : [1m[32mOK[0m
===== at l.57 test vec2.size() == 2 : [1m[32mOK[0m
===== at l.58 test vec2.capacity() == 10 : [1m[32mOK[0m
===== at l.59 test vec2.begin() + 2 == vec2.end() : [1m[32mOK[0m
